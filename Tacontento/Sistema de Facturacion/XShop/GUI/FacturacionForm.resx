<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblid.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAALEAAACxAcYtSY0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADj0lEQVRIS62Ve0hTURzHxT97ajU1Z+7Rps4157a0l5X2gJIZZWkIlpmsgsLIyl7g7GkvVhSmCKEJ
        19Qegmj2NHpAsJRKmwX2RjHTykqwUvft3HtP8zpnZfWFD9wN9vme87s797rRePhKpK/kQaouRbD6j/AY
        O7Y7JCy8gP7+t1mxcfd+e0NnD/6U5NRN0Or10OjCGOoYPO7u7usyT+S4FA0GW1B57QaS16xFsDa0lKpc
        518KPn79joSkJLssICCP6gbmbwoOny7EAmMMzpwtRj5TBLlCaVeoVKeosn+GWlD/pQd3O3qwv6QcazIP
        OPAQebVTZf84F1yue4pzd6wuYW5bkXvTihxKZfMn3PjYwyES+zVTZf8IC44zpdBPm4H41SYOf7kCC2Lj
        uOvYZBPE5HPkkjgYV5kQvTIFqsnhQytYvzMD2SVljt0Y4xNQ+cAG62deMndZAgqsNoc0UGfA9Q/d/1ZQ
        VmtDNRX+l4IJsolQ6/Qcoz3HQBoUjIBQPYf3BAmKba8cBUqtDsWPX+Jq29eh78BGmB/Xf8Us7Iq3WizQ
        aGSYH6VCzMIQaCb5Y8TI4V1EN4q3CjJYQQ2Zu/NIWPmihMXYtG42Ot8cAtqPcdjbLGByl9u9RcOeE+U4
        3kwjLMjKy8cc4yKk7SH/bfMBKDRaxG1Ig4lcMw8bsf1kNlJNMx3ipnozqs6uBN7uAlrSUVW0tNfXe0Q1
        VfMRFrAUXrmJg2eKkZHfh7mgBOWv3yNUp0THiyy+oO0w5kRIoFGNw7N7KaRgM8dU/fh3RCvl7STOBSy3
        yUkVzp2FPVTTpyjo6i3obtqCkGARmOxovLSaHAX7tkew9yKWt5MIC3LOl2Nq1FzoI3kMUfNwobGFK2B3
        EDkzkC94t4+TsfKIcDFqryY6Co6YZ30j2kTeTuK8g/v0ULlCrZbge8tRoDUDvc1pCFV7YUaYGDVX+gqi
        58nZEYXwdhLnAvZB5krOYtqxDZa9RiLayskuMbEozYtxyG23VsFHNLyBqvk4j8hAx+NqTFUtnTBMn4yC
        k33Sn9RVJ8FfPLKVKNW8mUZYwB4u51U7U9HUgcVJiTAYlEjfGAlzehSiF2oRpJa/JToVbxVEWPCIPOtd
        SV1R9rwVWecqsIe5iMKaJ+S7XjNVDsiK1Ez+pV/7ixv8K9jR+SkDnlLfgHh4if0apcrAz75SWft4iaxt
        qHh6+7R7inzWUx+Nm9sPPObtX318TVMAAAAASUVORK5CYII=
</value>
  </data>
</root>